@model Bounded
@{
    var items = from x in Model.Items
                select new SelectListItem() { Selected = Model.Key == x.Key, Text = x.Name, Value = Model.GetKey(x.Key) };
    IDictionary<string, object> htmlAttributes = new ViewDataDictionary();
    if (!string.IsNullOrEmpty(Model.Callback))
    {
        htmlAttributes.Add("data-change-callback", Model.Callback);
    }
    var aa = ViewData.TemplateInfo.GetFullHtmlFieldName("Key");
    htmlAttributes.Add("class", "select1");
    htmlAttributes.Add("id", aa);
}
<div class="vocation">
<div class="uew-select">
    <div class="uew-select-value ue-state-default">
  
    <em class="uew-select-text">@(items.Count() > 0?items.Where(s => s.Selected == true).FirstOrDefault()!=null?items.Where(s => s.Selected == true).FirstOrDefault().Text:items.FirstOrDefault().Text:"")</em><em class="uew-icon uew-icon-triangle-1-s"></em></div>
  
    @Html.DropDownList("Key", items, htmlAttributes)
    </div>
    </div>